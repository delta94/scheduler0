version: '3.4'

services:

  server:
    build:
      context: ./server
      network: default
      dockerfile: docker/Dockerfile.dev
      args:
        PORT: 4321
        POSTGRES_ADDRESS: postgres:5432
        POSTGRES_DATABASE: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
    ports:
      - "4321:4321"
    networks:
      - default
    depends_on:
      - postgres
    volumes:
      - ./server:/usr/src/server
    environment:
      POSTGRES_ADDRESS: postgres:5432
      POSTGRES_DATABASE: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: "go test ./... -cover -v"

#  client:
#    build:
#      context: ./client
#      dockerfile: Dockerfile.dev
#      args:
#        NODE_ENV: development
#        PORT: 4327
#        API_ENDPOINT: http://server:4321
#        BASIC_AUTH_USER: admin
#        BASIC_AUTH_PASS: admin
#    ports:
#      - "4327:4327"
#      - "9229:9229"
#    depends_on:
#      - server
#    networks:
#      - default
#    volumes:
#      - ./client:/usr/src/client
#    environment:
#      NODE_ENV: development
#      PORT: 4327
#      API_ENDPOINT: http://server:4321
#      BASIC_AUTH_USER: admin
#      BASIC_AUTH_PASS: admin

  postgres:
    image: postgres:11.10-alpine
    ports:
      - "5432:5432"
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
